@model IEnumerable<Job>;

@{
    ViewData["Title"] = "Job Posted By You";
}

<div class="row">


</div>

<div class="container">
    <h1>Job Listings</h1>
    <div class="row">
        @if (TempData["IsDeleted"] != null)
        {
            bool isDeleted = (bool)TempData["IsDeleted"];
            string alertType = isDeleted ? "success" : "danger";
            string alertMessage = isDeleted ? "Item deleted successfully!" : "Failed to delete item.";

            <div class="alert alert-@alertType alert-dismissible fade show" role="alert">
                @alertMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @foreach (var job in Model)
        {
            <div class="col-md-4">
                <a href="@Url.Action("Details", "Job", new { id = job.Id })" class="text-decoration-none">
                    <div class="card card bg-light mb-3">
                        <div class="card-header">
                            <h5 class="card-title">
                                <i class="fas fa-briefcase"></i> @job.Title
                            </h5>
                        </div>
                        <div class="card-body">
                            <p class="card-text">
                                <i class="fas fa-file-alt"></i> @TruncateText(job.Description,10)
                            </p>
                            <p class="card-text">
                                <i class="fas fa-money-bill"></i> Salary: @job.Salary
                            </p>
                            <p class="card-text">
                                <i class="fas fa-map-marker-alt"></i> Location: @job.Location
                            </p>
                        </div>
                        <div class="card-footer bg-info">
                            <p class="text-white">
                                <i class="fas fa-calendar"></i> Posted Date: @job.PostedDate.ToShortDateString()
                            </p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>

   

@functions {
    string TruncateText(string text, int maxLength)
    {
        if (text.Length <= maxLength)
        {
            return text;
        }
        else
        {
            return text.Substring(0, maxLength) + "...";
        }
    }
}