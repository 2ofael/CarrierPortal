@model List<Answer>;

@{
    ViewData["Title"] = "Answered By You";
}

@if (Model != null && Model.Any())
{
    <h2><i class="fas fa-comments"></i> Answers</h2>
    <div class="row">
        @foreach (var answer in Model)
        {
            <div class="col-md-6 col-lg-4">
                <div class="card mb-3">
                    <div class="card-body">
                        <h4 class="card-title"><i class="far fa-comment"></i> Answer</h4>
                        <p class="card-text">@TruncateText(answer.Content, 50)</p>
                        <div class="card-footer">
                            <div><i class="far fa-calendar"></i> Creation Date: @answer.CreationDate</div>
                            <div><i class="fas fa-thumbs-up"></i> Votes: @answer.Votes</div>
                            <div><i class="fas fa-check"></i> Is Approved: @answer.IsApproved</div>
                            <a asp-action="Details" asp-controller="Answer" asp-route-id="@answer.Id" class="btn btn-primary"><i class="far fa-eye"></i> View Answer</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No answers available.</p>
}



@functions {
    string TruncateText(string text, int maxLength)
    {
        if (text.Length <= maxLength)
        {
            return text;
        }
        else
        {
            return text.Substring(0, maxLength) + "...";
        }
    }
}