@model List<Question>

<h1>Q&A</h1>

<p>
    <a asp-action="Create">Ask a Question</a>
</p>

<div class="row">
    @foreach (var question in Model)
    {
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@question.Title</h5>
                    <p class="card-text">@TruncateText(question.Content, 100)</p>
                    <div>
                        <button class="btn btn-secondary" onclick="upvote('@(question.Id)')">Upvote</button>
                        <button class="btn btn-secondary" onclick="downvote('@(question.Id)')">Downvote</button>
                        <span class="vote-count">@question.Votes</span>
                    </div>
                    <p class="card-text">
                        <small class="text-muted">Posted By: @question.User.UserName</small>
                        <br />
                        <small class="text-muted">Posted On: @question.CreationDate.ToString("yyyy-MM-dd")</small>
                    </p>
                    <a href="@Url.Action("Details", new { id = question.Id })" class="btn btn-primary">Read More</a>
                </div>
            </div>
        </div>
    }
</div>


@functions {
    string TruncateText(string text, int maxLength)
    {
        if (text.Length <= maxLength)
        {
            return text;
        }
        else
        {
            return text.Substring(0, maxLength) + "...";
        }
    }
}



@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        function upvote(questionId) {
            axios.post('/QnA/Upvote', { questionId: questionId })
                .then(function (response) {
                    // Update the vote count on the page
                    var voteCountElement = document.querySelector(`#${questionId} .vote-count`);
                    voteCountElement.textContent = response.data.voteCount;
                })
                .catch(function (error) {
                    // Handle any errors
                    console.error(error);
                });
        }

        function downvote(questionId) {
            axios.post('/QnA/Downvote', { questionId: questionId })
                .then(function (response) {
                    // Update the vote count on the page
                    var voteCountElement = document.querySelector(`#${questionId} .vote-count`);
                    voteCountElement.textContent = response.data.voteCount;
                })
                .catch(function (error) {
                    // Handle any errors
                    console.error(error);
                });
        }
    </script>
}