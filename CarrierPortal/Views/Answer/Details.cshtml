@*@model Answer // Replace with your project's Answer model namespace


<div class="container">
    <h1>Answer Details</h1>

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Answer</h4>
            <div class="card-text">Content: @Model.Content</div>
            <div class="card-text">Creation Date: @Model.CreationDate</div>
            <div class="card-text">Votes: @Model.Votes</div>
            <div class="card-text">Is Approved: @Model.IsApproved</div>
        </div>
    </div>

    @if (User.Identity.Name == Model.User.UserName)
    {
        <div class="mt-3">
            <a asp-action="Edit" asp-controller="Answer" asp-route-id="@Model.Id" class="btn btn-primary">Edit Answer</a>
            <a asp-action="Delete" asp-controller="Answer" asp-route-id="@Model.Id" class="btn btn-danger">Delete Answer</a>
        </div>
    }
    @if (User.IsInRole("Admin") && !Model.IsApproved)
    {
        <form method="post" asp-action="ApproveAnswer">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" value="@Model.Id" />
            <button type="submit" class="btn btn-success">Approve Answer</button>
        </form>
    }

    <a asp-action="Index" asp-controller="QnA" class="btn btn-secondary mt-3">Back to Answers</a>
</div>*@

@using System.Security.Claims;
@model Answer

<div class="container">
    <h1><i class="fas fa-info-circle"></i> Answer Details</h1>
    @if (TempData["isApproved"] != null && (bool)TempData["isApproved"])
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> <strong>Success!</strong> Approved has been Successfully.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

 
    @if (TempData["isCreated"] != null && (bool)TempData["isCreated"])
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> <strong>Success!</strong> Created Successfully.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["isEdited"] != null && (bool)TempData["isEdited"])
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="fas fa-pencil-alt"></i> <strong>Success!</strong> Edited Successfully.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="card">
        <div class="card-body">
            <h4 class="card-title"><i class="fas fa-comment"></i> Answer</h4>
            <div class="card-text"><i class="fas fa-file-alt"></i> Content: @Model.Content</div>
            <div class="card-text"><i class="far fa-calendar"></i> Creation Date: @Model.CreationDate</div>
            <div class="card-text"><i class="fas fa-thumbs-up"></i> Sum Votes: @Model.Votes</div>
            <div class="card-text">By: @Model.User.Mentor.ActorName <a asp-controller="Mentor" asp-action="ViewProfile" asp-route-actorId="@Model.User.Mentor.ActorId"><i class="fa-solid fa-link"></i></a></div>
            @* <div class="card-text"><i class="fas fa-check"></i> Is Approved: @Model.IsApproved</div>*@
            @if (Model.IsApproved)
            {
                <h6><i class="fas fa-check-circle text-success"></i> Approved</h6>

            }
            else
            {
                <h6><i class="fas fa-times-circle text-danger"></i> Not Approved </h6>

            }
        </div>
        <form method="get" asp-action="Details" asp-controller="QnA" asp-route-Id="@Model.QuestionId">
            <button type="submit" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Back to Question</button>
        </form>
    </div>

    <div class="vote-buttons mt-3">
        @if (User.Identity.IsAuthenticated)
        {
            var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            var answerVote = Model.AnswerVotes.FirstOrDefault(v => v.UserId == userId);

            if (answerVote == null)
            {
                <div class="row">
                    <div class="col-md-6">
                        <form asp-controller="QnA" asp-action="UpvoteQuestion" asp-route-questionId="@Model.Id">
                            <button type="submit" class="btn btn-outline-success m-2"><i class="fas fa-arrow-up"></i> Upvote</button>
                        </form>
                    </div>
                    <div class="col-md-6">
                        <form   asp-controller="QnA" asp-action="DownvoteQuestion" asp-route-questionId="@Model.Id">
                            <button type="submit" class="btn btn-outline-danger m-2"><i class="fas fa-arrow-down"></i> Downvote</button>
                        </form>
                    </div>
                </div>

            }
            else
            {
                var isUpvote = answerVote.IsUpvote;
                var voteText = isUpvote ? "Upvoted" : "Downvoted";
                var buttonColor = isUpvote ? "btn-success" : "btn-danger";
                var buttonIcon = isUpvote ? "fas fa-arrow-up" : "fas fa-arrow-down";

                <button type="button" class="btn @buttonColor" disabled><i class="@buttonIcon"></i> @voteText</button>
            }
        }
    </div>

    <div class="btn-group mt-3">
       @* <a asp-action="Details" asp-controller="QnA" asp-route-Id="@Model.QuestionId" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Back to Question</a>*@
       

        @if (User.IsInRole("Admin") && !Model.IsApproved)
        {
            <form method="post" asp-action="ApproveAnswer">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" value="@Model.Id" />
                <button type="submit" class="btn btn-success m-1"><i class="fas fa-check"></i> Approve</button>
            </form>
        }

        @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || Model.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
        {
            <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-primary m-1"><i class="fas fa-edit"></i> Edit</a>
            <form asp-controller="Answer" asp-action="Delete" asp-route-id="@Model.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this Answer?')">
                <button type="submit" class="btn btn-danger m-1"><i class="fas fa-trash"></i> Delete</button>
            </form>
        }
    </div>

</div>

