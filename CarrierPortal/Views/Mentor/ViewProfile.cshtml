@using System.Security.Claims;
@model Actor

@{
    ViewData["Title"] = "View Profile";
    Layout = "_LayoutMentor"; // Assuming you have a shared layout for your project
}

<div class="container">
    @if (TempData["isApproved"] != null && (bool)TempData["isApproved"])
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> <strong>Success!</strong> Approved has been Successfully.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="card mt-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <img src="~/Photo/@Model.ProfilePhoto" alt="Profile Photo" class="card-img">
                </div>
                <div class="col-md-8">
                    <h5 class="card-title"><i class="fas fa-user"></i> @Model.ActorName</h5>
                    <p class="card-text"><i class="fas fa-tools"></i> Skills: @Model.Skills</p>
                    <p class="card-text"><i class="fas fa-graduation-cap"></i> Academic Qualification: @Model.AcademicQualification</p>
                    <p class="card-text"><i class="fas fa-info-circle"></i> About: @Model.About</p>
                    <p class="card-text"><i class="fas fa-birthday-cake"></i> Age: @Model.age</p>
                    <p class="card-text"><i class="fas fa-venus-mars"></i> Gender: @Model.Gender</p>
                    <p class="card-text"><i class="fas fa-briefcase"></i> Current Profession: @Model.CurrentProfession</p>
                    <p class="card-text"><i class="fas fa-map-marker-alt"></i> Address: @Model.Address</p>

                    @if (Model.isMentor)
                    {
                        <h6><i class="fas fa-check-circle text-success"></i> Approved</h6>

                    }
                    else
                    {
                        <h6><i class="fas fa-times-circle text-danger"></i> Approval Pending</h6>

                    }


                    <h4><i class="fas fa-heart"></i> Loved @Model.Loved.Count()</h4>
                    <div class="btn-group" role="group" aria-label="Vote Buttons">
                        @if (User.Identity.IsAuthenticated)
                        {
                            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                            var isLoved = Model.Loved.Select(l => l.UserNameIdentifier == userId).FirstOrDefault();

                            <form asp-controller="Mentor" asp-action="LovePost" method="post">
                                <input type="hidden" asp-for="ActorId" name="ActorId" value="@Model.ActorId" />
                                <button type="submit" class="btn @Html.Raw(isLoved ? "btn-danger" : "btn-outline-danger")">
                                    <i class="fas @Html.Raw(isLoved ? "fa-heart" : "fa-heart-o")"></i> @Html.Raw(isLoved ? "Loved" : "Love") (@Model.Loved.Count())
                                </button>
                            </form>
                        }
                      
                    </div>
                
                    @if (Model.isMentor)
                    {
                        <a class="btn btn-info" asp-action="Index" asp-controller="Payments" asp-route-mentorId="@Model.ActorId"><i class="fas fa-envelope"></i> View Email Or Phone</a>
                      
                    }

                    @if (Model.UserId == User.FindFirst(ClaimTypes.NameIdentifier)?.Value)
                    {
                        @if (Model.isMentor)
                        {

                            <a class="btn btn-secondary" asp-action="PostPone" asp-controller="Mentor" asp-route-mentorId="@Model.ActorId">
                                <i class="fas fa-envelope"></i>
                                postpone Mentoring
                            </a>
                        }
                        else if (User.IsInRole("Mentor") && Model.isMentor == false)
                        {
                            <a class="btn btn-secondary" asp-action="EnableMentoring" asp-controller="Mentor" asp-route-mentorId="@Model.ActorId">
                                <i class="fas fa-envelope"></i>
                                Enable Mentoring
                            </a>

                        }
                    }
               

                </div>
            </div>
        </div>
    </div>
</div>

@if (User.IsInRole("Admin") && !Model.isMentor)
{
   @* @if (!string.IsNullOrEmpty(Model.Certificates))
    {
        <h3 class="mt-4"><i class="fas fa-certificate"></i> Certificates</h3>
        <div>
            <a href="~/Certificates/@Model.Certificates" download><i class="fas fa-download"></i> Download Certificate</a>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.cv))
    {
        <h3 class="mt-4"><i class="fas fa-file-alt"></i> CV</h3>
        <div>
            <a href="~/CV/@Model.cv" download><i class="fas fa-download"></i> Download CV</a>
        </div>
    }

    <form method="post" asp-action="ApproveActor">
        @Html.AntiForgeryToken()
        <input type="hidden" name="actorId" value="@Model.ActorId" />
        <button type="submit" class="btn btn-success "><i class="fas fa-check"></i> Approve Actor</button>
    </form>*@
    <div class="card m-4">
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Model.Certificates))
            {
                <h3 class="card-title mt-4"><i class="fas fa-certificate"></i> Certificates</h3>
                <div>
                    <a href="~/Certificates/@Model.Certificates" download><i class="fas fa-download"></i> Download Certificate</a>
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.cv))
            {
                <h3 class="card-title mt-4"><i class="fas fa-file-alt"></i> CV</h3>
                <div>
                    <a href="~/CV/@Model.cv" download><i class="fas fa-download"></i> Download CV</a>
                </div>
            }

            <form method="post" asp-action="ApproveActor">
                @Html.AntiForgeryToken()
                <input type="hidden" name="actorId" value="@Model.ActorId" />
                <button type="submit" class="btn btn-success mt-4"><i class="fas fa-check"></i> Approve Actor</button>
            </form>

            @if (User.IsInRole("Admin"))
            {
                <form asp-controller="Mentor" asp-action="DeleteMentor" asp-route-actorId="@Model.ActorId" method="post" onsubmit="return confirm('Are you sure you want to delete this Mentor?')">
                    <button type="submit" class="btn btn-danger m-1" data-action="delete"><i class="fas fa-trash"></i> Delete</button>
                </form>
            }
        </div>
    </div>


}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
}
